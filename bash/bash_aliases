# Alias definitions.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

export TERM=xterm-256color
export EDITOR vim

# enable color support of ls and also add handy aliases
if [ "$TERM" != "dumb" ] && [ -x "$(command -v dircolors)" ]; then
    eval "`dircolors -b`"
    alias ls='ls --color=auto -h'
    alias dir='ls --color=auto --format=vertical'
    alias vdir='ls --color=auto --format=long'
    alias l.='ls -dF .[a-zA-Z0-9]* --color=tty'
    alias ll.='ls -dlF .[a-zA-Z0-9]* --color=tty'
    alias grep='grep --color=auto'
    alias less='less --raw-control-chars'
fi

# some more ls aliases
alias ll='ls -l'
alias la='ls -A'
alias l='ls -CF'
alias lla='ls -lA'
alias ld='ls -al -d * | egrep "^d"' # only subdirectories
alias lt='ls -alt | head -20' # recently changed files

# directory tree - http://www.shell-fu.org/lister.php?id=209
alias tdir='find . -type d | sed -e "s/[^-][^\/]*\//  |/g" -e "s/|\([^ ]\)/|-\1/"'

# display file sizes
alias du="du -h"
alias df="df -h"

# common aliases
alias cd..='cd ..'
alias mkcd='_(){ mkdir $1 && cd $1; }; _'
alias cls='clear'
alias del='rm -R'
alias reboot='sudo shutdown --reboot now'
alias g='gnome-open'
alias web_own='sudo chown www-data:www-data'

alias list_zombies='ps -el | grep 'Z''

# bash history aliases
alias top_commands="history | awk '{print $2}' | sort | uniq -c | sort -rn | head -10"
alias hide_me='history -d $((HISTCMD-1))'
alias hide_prev='history -d $((HISTCMD-2)) && history -d $((HISTCMD-1))'

# Apps
alias todo='topydo'
alias gst='git status'

# bash config edits
alias edit_aliases='vim ~/.bash_aliases && . ~/.bash_aliases'
alias update_dotfiles='git -C ~/.dotfiles pull --rebase && ~/.dotfiles/install'

################################### shell-fu ###################################
# bash function to decompress archives - http://www.shell-fu.org/lister.php?id=375
extract () {
    for x in "$@"; do
        if [ -f $x ] ; then
            case "$x" in
                *.tar.bz2)  ee "tar xvjf" "$x"      ;;
                *.tar.gz)   ee "tar xvzf" "$x"      ;;
                *.bz2)      ee "bunzip2" "$x"       ;;
                *.rar)      ee "unrar x" "$x"       ;;
                *.gz)       ee "gunzip" "$x"        ;;
                *.tar)      ee "tar xvf" "$x"       ;;
                *.tbz2)     ee "tar xvjf" "$x"      ;;
                *.tgz)      ee "tar xvzf" "$x"      ;;
                *.zip)      ee "unzip" "$x"         ;;
                *.Z)        ee "uncompress" "$x"    ;;
                *.7z)       ee "7z x" "$x"          ;;
                *)          echo "'$x' cannot be extracted via >extract<" ;;
            esac
        fi
    done
}

function swap()
{
    local TMPFILE=tmp.$$
    mv "$1" $TMPFILE && mv "$2" "$1" && mv $TMPFILE "$2"
}


if [ -f ~/.bash_local ]; then
    . ~/.bash_local
fi
